version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: contact-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database:/docker-entrypoint-initdb.d
    networks:
      - contact-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: contact-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_URL=${APP_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - APP_PORT=${APP_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DIALECT=${DB_DIALECT}
      - JWT_SECRET=${JWT_SECRET}
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
    depends_on:
      - mysql
    networks:
      - contact-network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: contact-frontend
    restart: unless-stopped
    ports:
      - "4000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    networks:
      - contact-network

volumes:
  mysql_data:

networks:
  contact-network:
    driver: bridge
